// <auto-generated />
using System;
using EF_Baza_PraktykiStudenckie.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EF_Baza_PraktykiStudenckie.Migrations
{
    [DbContext(typeof(PraktykiContext))]
    partial class PraktykiContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("EF_Baza_PraktykiStudenckie.Models.Adres", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Firmy");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FirmaId")
                        .HasColumnType("int");

                    b.Property<string>("KodPocztowy")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Miejscowość")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("NrBudynku")
                        .HasColumnType("int");

                    b.Property<int?>("NrLokalu")
                        .HasColumnType("int");

                    b.Property<string>("Ulica")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FirmaId");

                    b.ToTable("Adresy");
                });

            modelBuilder.Entity("EF_Baza_PraktykiStudenckie.Models.Firma", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Firmy");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("NIP")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("Nazwa")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NrTelefonu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Firmy");
                });

            modelBuilder.Entity("EF_Baza_PraktykiStudenckie.Models.Opiekun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Opiekuna");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imię")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Opiekunowie");
                });

            modelBuilder.Entity("EF_Baza_PraktykiStudenckie.Models.Opiekun_Uczelnia", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Opiekuna");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Katedra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpiekunId")
                        .HasColumnType("int");

                    b.Property<string>("Wydział")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OpiekunId");

                    b.ToTable("OpiekunowieUczelnia");
                });

            modelBuilder.Entity("EF_Baza_PraktykiStudenckie.Models.Opiekun_ZakładPracy", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Opiekuna");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("IdFirmy")
                        .HasColumnType("int")
                        .HasColumnName("ID_Firmy");

                    b.Property<string>("NrTelefonu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OpiekunId")
                        .HasColumnType("int");

                    b.Property<string>("Stanowsisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OpiekunId");

                    b.ToTable("OpiekunowieZakładPracy");
                });

            modelBuilder.Entity("EF_Baza_PraktykiStudenckie.Models.Praktyka", b =>
                {
                    b.Property<int>("IdFirmy")
                        .HasColumnType("int")
                        .HasColumnName("ID_Firmy");

                    b.Property<int>("IdStudenta")
                        .HasColumnType("int")
                        .HasColumnName("ID_Studenta");

                    b.Property<int?>("FirmaId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Koniec")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Początek")
                        .HasColumnType("datetime2");

                    b.Property<string>("ZakresObowiązków")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdFirmy", "IdStudenta");

                    b.HasIndex("FirmaId");

                    b.ToTable("Praktyki");
                });

            modelBuilder.Entity("EF_Baza_PraktykiStudenckie.Models.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("ID_Studenta");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imię")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nazwisko")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NrAlbumu")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PraktykaIdFirmy")
                        .HasColumnType("int");

                    b.Property<int>("PraktykaIdStudenta")
                        .HasColumnType("int");

                    b.Property<int>("RokStudiów")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("PraktykaIdFirmy", "PraktykaIdStudenta");

                    b.ToTable("Studenci");
                });

            modelBuilder.Entity("OpiekunStudent", b =>
                {
                    b.Property<int>("OpiekunowieId")
                        .HasColumnType("int");

                    b.Property<int>("StudenciPodOpiekąId")
                        .HasColumnType("int");

                    b.HasKey("OpiekunowieId", "StudenciPodOpiekąId");

                    b.HasIndex("StudenciPodOpiekąId");

                    b.ToTable("OpiekunStudent");
                });

            modelBuilder.Entity("EF_Baza_PraktykiStudenckie.Models.Adres", b =>
                {
                    b.HasOne("EF_Baza_PraktykiStudenckie.Models.Firma", "Firma")
                        .WithMany()
                        .HasForeignKey("FirmaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Firma");
                });

            modelBuilder.Entity("EF_Baza_PraktykiStudenckie.Models.Opiekun_Uczelnia", b =>
                {
                    b.HasOne("EF_Baza_PraktykiStudenckie.Models.Opiekun", "Opiekun")
                        .WithMany()
                        .HasForeignKey("OpiekunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Opiekun");
                });

            modelBuilder.Entity("EF_Baza_PraktykiStudenckie.Models.Opiekun_ZakładPracy", b =>
                {
                    b.HasOne("EF_Baza_PraktykiStudenckie.Models.Opiekun", "Opiekun")
                        .WithMany()
                        .HasForeignKey("OpiekunId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Opiekun");
                });

            modelBuilder.Entity("EF_Baza_PraktykiStudenckie.Models.Praktyka", b =>
                {
                    b.HasOne("EF_Baza_PraktykiStudenckie.Models.Firma", null)
                        .WithMany("Praktyki")
                        .HasForeignKey("FirmaId");
                });

            modelBuilder.Entity("EF_Baza_PraktykiStudenckie.Models.Student", b =>
                {
                    b.HasOne("EF_Baza_PraktykiStudenckie.Models.Praktyka", "Praktyka")
                        .WithMany()
                        .HasForeignKey("PraktykaIdFirmy", "PraktykaIdStudenta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Praktyka");
                });

            modelBuilder.Entity("OpiekunStudent", b =>
                {
                    b.HasOne("EF_Baza_PraktykiStudenckie.Models.Opiekun", null)
                        .WithMany()
                        .HasForeignKey("OpiekunowieId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EF_Baza_PraktykiStudenckie.Models.Student", null)
                        .WithMany()
                        .HasForeignKey("StudenciPodOpiekąId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EF_Baza_PraktykiStudenckie.Models.Firma", b =>
                {
                    b.Navigation("Praktyki");
                });
#pragma warning restore 612, 618
        }
    }
}
